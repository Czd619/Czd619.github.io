<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Daniel Chen @Github.io</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://czd619.github.io/"/>
  <updated>2016-04-28T12:52:02.271Z</updated>
  <id>http://czd619.github.io/</id>
  
  <author>
    <name>Daniel Chen</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Google 2016 面试题 | 不构造树的情况下验证先序遍历</title>
    <link href="http://czd619.github.io/Google-2016-%E9%9D%A2%E8%AF%95%E9%A2%98-%E4%B8%8D%E6%9E%84%E9%80%A0%E6%A0%91%E7%9A%84%E6%83%85%E5%86%B5%E4%B8%8B%E9%AA%8C%E8%AF%81%E5%85%88%E5%BA%8F%E9%81%8D%E5%8E%86/"/>
    <id>http://czd619.github.io/Google-2016-面试题-不构造树的情况下验证先序遍历/</id>
    <published>2016-04-28T12:00:01.000Z</published>
    <updated>2016-04-28T12:52:02.271Z</updated>
    
    <content type="html">&lt;p&gt;&lt;img src=&quot;http://7xti7c.com2.z0.glb.clouddn.com/tree.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;strong&gt;From &lt;a href=&quot;http://www.jiuzhang.com/qa/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;jiuzhang&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h2&gt;&lt;p&gt;给出一个字符序列，问该序列是否是一棵合法的二叉树的先序遍历？&lt;br&gt;找到一种不需要构造二叉树的方法。&lt;br&gt;&lt;strong&gt;For example：&lt;/strong&gt;&lt;br&gt;“9,3,4,#,#,1,#,#,2,#,6,#,#”&lt;br&gt;是下面这颗二叉树的先序遍历。其中＃代表空节点。&lt;/p&gt;
&lt;h2 id=&quot;解题思路&quot;&gt;&lt;a href=&quot;#解题思路&quot; class=&quot;headerlink&quot; title=&quot;解题思路&quot;&gt;&lt;/a&gt;解题思路&lt;/h2&gt;&lt;p&gt;一棵合法的二叉树去掉某个叶子节点后仍是合法的二叉树。在给出的字符序列中，叶子节点有很明显的特征，即叶子节点之后一定紧跟两个空节点＃。通过不断的把number,#,#的子串缩成空节点#(把number,#,#子串替换为#)，如果最后字符序列可以缩短到只有一个字符＃，那它就是我们要找的合法的先序遍历了。&lt;/p&gt;
&lt;h2 id=&quot;参考代码&quot;&gt;&lt;a href=&quot;#参考代码&quot; class=&quot;headerlink&quot; title=&quot;参考代码&quot;&gt;&lt;/a&gt;参考代码&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;public class Solution &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  public boolean isValidSerialization(String preorder) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    String s = preorder;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    boolean flag = true;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    while (s.length() &amp;gt; 1) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      int index = s.indexOf(&amp;quot;,#,#&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      if (index &amp;lt; 0)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        flag = false;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        break;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      int start = index;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      while (start &amp;gt; 0 &amp;amp;&amp;amp; s.charAt(start - 1) != &amp;apos;,&amp;apos;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        start --;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      if (s.charAt(start) == &amp;apos;#&amp;apos;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        flag = false;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        break;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      s = s.substring(0, start) + s.substring(index + 3);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if (s.equals(&amp;quot;#&amp;quot;) &amp;amp;&amp;amp; flag)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      return true;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    else&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      return false;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;算法分析&quot;&gt;&lt;a href=&quot;#算法分析&quot; class=&quot;headerlink&quot; title=&quot;算法分析&quot;&gt;&lt;/a&gt;算法分析&lt;/h2&gt;&lt;p&gt;此题可以用暴力搜索解决，但线性复杂度算法也不难想到。笔者认为写出以上解法，可以达到hire, 而如果用stack解法，则可以 storng hire.&lt;/p&gt;
&lt;h2 id=&quot;相关练习&quot;&gt;&lt;a href=&quot;#相关练习&quot; class=&quot;headerlink&quot; title=&quot;相关练习&quot;&gt;&lt;/a&gt;相关练习&lt;/h2&gt;&lt;p&gt;树的操作时面试中的高频题目，基础操作（遍历，求深度，求path value等）需熟练掌握。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://leetcode.com/problems/verify-preorder-serialization-of-a-binary-tree/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Verify Preorder Serialization of a Binary Tree&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://leetcode.com/problems/binary-tree-preorder-traversal/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Binary Tree Preorder Traversal&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://leetcode.com/problems/binary-tree-level-order-traversal/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Binary Tree Level Order Traversal&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://leetcode.com/problems/binary-tree-level-order-traversal-ii/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Binary Tree Level Order Traversal II&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://leetcode.com/problems/binary-tree-postorder-traversal/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Binary Tree Postorder Traversal&lt;/a&gt; (思考非递归算法)&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://leetcode.com/problems/construct-binary-tree-from-inorder-and-postorder-traversal/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Construct Binary Tree from Inorder and Postorder Traversal&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://7xti7c.com2.z0.glb.clouddn.com/tree.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;strong&gt;From &lt;a href=&quot;http://www.jiuzhang.com/qa/&quot; target=&quot;_blank&quot; r
    
    </summary>
    
    
      <category term="Java" scheme="http://czd619.github.io/tags/Java/"/>
    
      <category term="algorithm" scheme="http://czd619.github.io/tags/algorithm/"/>
    
  </entry>
  
  <entry>
    <title>Google 2016 面试题 | 数组补丁</title>
    <link href="http://czd619.github.io/Google-2016-%E9%9D%A2%E8%AF%95%E9%A2%98-%E6%95%B0%E7%BB%84%E8%A1%A5%E4%B8%81/"/>
    <id>http://czd619.github.io/Google-2016-面试题-数组补丁/</id>
    <published>2016-04-27T09:09:44.000Z</published>
    <updated>2016-04-27T09:51:15.951Z</updated>
    
    <content type="html">&lt;p&gt;&lt;img src=&quot;/images/googleLogo.gif&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;strong&gt;From &lt;a href=&quot;http://www.jiuzhang.com/qa/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;jiuzhang&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h2&gt;&lt;p&gt;给定一个字符串，找到最长的包含最多k个不同字符的子串，输出最长子串的长度即可。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Example：&lt;/strong&gt;&lt;br&gt;给出字符串”eceba”，k = 2&lt;br&gt;输出答案3，最长包含最多2个不同字符的子串为”ece”&lt;/p&gt;
&lt;h2 id=&quot;解题思路&quot;&gt;&lt;a href=&quot;#解题思路&quot; class=&quot;headerlink&quot; title=&quot;解题思路&quot;&gt;&lt;/a&gt;解题思路&lt;/h2&gt;&lt;p&gt;最暴力的做法是穷举所有可能的子串，一共有n^2级别个不同的子串，然后对于每一个子串统计有多少不同的字符，如果少于k个就更新答案。这是一个三重循环的穷举，复杂度是O(n^3)。聪明的读者肯定想到了第二重和第三重循环可以合并，因为之前的统计信息可以继续使用而不需要每一次重新统计。这样的话穷举子串的开始位置和结束位置，复杂度是O(n^2)。如果在面试时提出了这个算法，面试官首先会表示认同，然后希望你进行优化。我们来看看如何进行优化。&lt;/p&gt;
&lt;p&gt;在统计的过程中我们可以发现，当穷举的开始位置改变时我们会选择重新统计，但其实当开始位置改变时，我们之前记录的大部分信息都是有用的，我们只需在原有的统计结果上稍作修改。我们在两层for循环的时候其实会发现我们内层的fo循环其实并不需要每次都再重复遍历。比如外层for循环指针i每次向前移动变成i+1的时候，内层for循环的j没必要每次都退回到i的位置，其实是可以保留在j的位置不变的。因为可以证明对于从i+1到j-1这些情况都不会出现重复的元素，所以我们只用考虑从i+1到j就可以了。&lt;/p&gt;
&lt;p&gt;分析一下这个算法的时间复杂度，虽然我们会用到两重循环（请看参考程序），但是因为这两个指针只增不减，每次循环指针增加1，因此while循环总共只会进入n次（n = s.length( ))，所以时间复杂度是O(n)。&lt;/p&gt;
&lt;h2 id=&quot;参考代码&quot;&gt;&lt;a href=&quot;#参考代码&quot; class=&quot;headerlink&quot; title=&quot;参考代码&quot;&gt;&lt;/a&gt;参考代码&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;public class Solution&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  /**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   * @param s: A string&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   * @return : The length of the longest substring&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   *           that contains at most k distinct characters.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   public int lengthOfLongestKDistinct(String s, int k)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     int maxLen = 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     // Key: letter; value: the number of occurrences.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     Map&amp;lt;Character, Integer&amp;gt; map = new HashMap&amp;lt;Character, Integer&amp;gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     int i, j = 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     char c;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     for (i = 0; i &amp;lt; s.length(); i++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       while (j &amp;lt; s.length())&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         c = s.charAt(j);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         if(map.containsKey(c))&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           map.put(c, map.get(c) + 1);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &amp;#125; else &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           if (map.size() == k)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             break;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           map.put(c, 1);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         j++;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       maxLen = Math.max(maxLen, j - i);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       c = s.charAt(i);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       if(map.containsKey(c))&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         int count = map.get(c);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         if (count &amp;gt; 1) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           map.put(c, count - 1);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &amp;#125; else &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           map.remove(c);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     return maxLen;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;算法分析&quot;&gt;&lt;a href=&quot;#算法分析&quot; class=&quot;headerlink&quot; title=&quot;算法分析&quot;&gt;&lt;/a&gt;算法分析&lt;/h2&gt;&lt;p&gt;这是一道很有区分度的题目，有O(n^3),O(n^2),O(nlogn)（follow up）,O(n)时间复杂度的做法。先提出一种可行算法，通过一步步分析、优化，最后提出O(n)的最优算法并完成代码就可以达到hire的程度。&lt;/p&gt;
&lt;h2 id=&quot;相关练习&quot;&gt;&lt;a href=&quot;#相关练习&quot; class=&quot;headerlink&quot; title=&quot;相关练习&quot;&gt;&lt;/a&gt;相关练习&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://leetcode.com/problems/minimum-size-subarray-sum/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;minimum-size-subarray-sum&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://leetcode.com/problems/longest-substring-without-repeating-characters/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;longest-without-repeating-characters&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/images/googleLogo.gif&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;strong&gt;From &lt;a href=&quot;http://www.jiuzhang.com/qa/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;jiuzhang&lt;/
    
    </summary>
    
    
      <category term="Java" scheme="http://czd619.github.io/tags/Java/"/>
    
      <category term="algorithm" scheme="http://czd619.github.io/tags/algorithm/"/>
    
  </entry>
  
  <entry>
    <title>Markdown Syntax</title>
    <link href="http://czd619.github.io/Markdown-Syntax/"/>
    <id>http://czd619.github.io/Markdown-Syntax/</id>
    <published>2014-04-26T07:29:10.000Z</published>
    <updated>2016-04-26T12:51:57.711Z</updated>
    
    <content type="html">&lt;h2 id=&quot;I-What-is-Markdown&quot;&gt;&lt;a href=&quot;#I-What-is-Markdown&quot; class=&quot;headerlink&quot; title=&quot;I. What is Markdown&quot;&gt;&lt;/a&gt;I. What is Markdown&lt;/h2&gt;&lt;h3 id=&quot;Targets-of-Markdown&quot;&gt;&lt;a href=&quot;#Targets-of-Markdown&quot; class=&quot;headerlink&quot; title=&quot;Targets of Markdown&quot;&gt;&lt;/a&gt;Targets of Markdown&lt;/h3&gt;&lt;p&gt;&lt;em&gt;Markdown&lt;/em&gt; is a text-to-HTML conversion tool for web writers &lt;a href=&quot;http://daringfireball.net/projects/markdown/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;by John Gruber @Daringfireball&lt;/a&gt;. Thus other details can be seen in author’s website above.&lt;/p&gt;
&lt;h3 id=&quot;Tools-for-Markdown&quot;&gt;&lt;a href=&quot;#Tools-for-Markdown&quot; class=&quot;headerlink&quot; title=&quot;Tools for Markdown&quot;&gt;&lt;/a&gt;Tools for Markdown&lt;/h3&gt;&lt;p&gt;Most people recommend &lt;strong&gt;&lt;a href=&quot;http://mouapp.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Mou&lt;/a&gt;&lt;/strong&gt; on Mac OS. While on Windows, here are &lt;strong&gt;&lt;a href=&quot;http://www.markdownpad.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;MarkdownPad&lt;/a&gt;&lt;/strong&gt; (much better than the followings …) and &lt;strong&gt;&lt;a href=&quot;http://code52.org/DownmarkerWPF/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;MarkPad&lt;/a&gt;&lt;/strong&gt; (er… it’s too slow at least for me). For convenience, I just use &lt;strong&gt;&lt;a href=&quot;https://atom.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Atom&lt;/a&gt;&lt;/strong&gt; by Google with MD plugin, it’s enough for me.&lt;/p&gt;
&lt;h2 id=&quot;II-Markdown-Syntax&quot;&gt;&lt;a href=&quot;#II-Markdown-Syntax&quot; class=&quot;headerlink&quot; title=&quot;II. Markdown Syntax&quot;&gt;&lt;/a&gt;II. Markdown Syntax&lt;/h2&gt;&lt;h3 id=&quot;Headers&quot;&gt;&lt;a href=&quot;#Headers&quot; class=&quot;headerlink&quot; title=&quot;Headers&quot;&gt;&lt;/a&gt;Headers&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# This is an H1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;## This is an H2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;###### This is an H6&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;There are 6 levels of header, adding &lt;code&gt;#&lt;/code&gt; , from H1 to H6.&lt;/p&gt;
&lt;h3 id=&quot;Lists&quot;&gt;&lt;a href=&quot;#Lists&quot; class=&quot;headerlink&quot; title=&quot;Lists&quot;&gt;&lt;/a&gt;Lists&lt;/h3&gt;&lt;p&gt;Markdown supports ordered (numbered) and unordered (bulleted) lists.&lt;/p&gt;
&lt;h4 id=&quot;unordered&quot;&gt;&lt;a href=&quot;#unordered&quot; class=&quot;headerlink&quot; title=&quot;unordered&quot;&gt;&lt;/a&gt;unordered&lt;/h4&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;*   Red&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;*   Green&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;*   Blue&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;is equivalent to:&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;-   Red&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-   Green&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-   Blue&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h4 id=&quot;numbered&quot;&gt;&lt;a href=&quot;#numbered&quot; class=&quot;headerlink&quot; title=&quot;numbered&quot;&gt;&lt;/a&gt;numbered&lt;/h4&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1.  Bird&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2.  McHale&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3.  Parish&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;Quotes&quot;&gt;&lt;a href=&quot;#Quotes&quot; class=&quot;headerlink&quot; title=&quot;Quotes&quot;&gt;&lt;/a&gt;Quotes&lt;/h3&gt;&lt;p&gt;Markdown allows you to be lazy and only put the &lt;code&gt;&amp;gt;&lt;/code&gt; before the first line of a hard-wrapped paragraph:&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt; This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Vestibulum enim wisi, viverra nec, fringilla &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt;, laoreet vitae, risus.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;shown as,&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,&lt;br&gt;consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.&lt;br&gt;Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This style is based on the template used in &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&quot;Links-and-images&quot;&gt;&lt;a href=&quot;#Links-and-images&quot; class=&quot;headerlink&quot; title=&quot;Links and images&quot;&gt;&lt;/a&gt;Links and images&lt;/h3&gt;&lt;p&gt;Markdown supports two style of links and images: &lt;em&gt;inline&lt;/em&gt; and &lt;em&gt;reference&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;inline&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;links : This is [an example](http://example.com/ &lt;span class=&quot;string&quot;&gt;&quot;Title&quot;&lt;/span&gt;) inline link.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        or&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [This link](http://example.net/) has no title attribute.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;images : ![Alt text](/path/to/img.jpg)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         or&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         ![Alt text](/path/to/img.jpg &lt;span class=&quot;string&quot;&gt;&quot;Optional title&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;If you’re referring to a local resource on the same server, you can use relative paths:&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;See my [About](/about/) page &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; details.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;reference&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;links: This is [an example] [id] reference-style link.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;built_in&quot;&gt;where&lt;/span&gt; id is defined by&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [id]: http://example.com/  &lt;span class=&quot;string&quot;&gt;&quot;Optional Title Here&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;images: ![Alt text][id]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;where&lt;/span&gt; id is defined by&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [id]: url/to/image  &lt;span class=&quot;string&quot;&gt;&quot;Optional title attribute&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;Code&quot;&gt;&lt;a href=&quot;#Code&quot; class=&quot;headerlink&quot; title=&quot;Code&quot;&gt;&lt;/a&gt;Code&lt;/h3&gt;&lt;p&gt;To indicate a span of code, wrap it with backtick quotes `.&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Use the `&lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;()` function.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;Emphasis&quot;&gt;&lt;a href=&quot;#Emphasis&quot; class=&quot;headerlink&quot; title=&quot;Emphasis&quot;&gt;&lt;/a&gt;Emphasis&lt;/h3&gt;&lt;p&gt;Markdown treats asterisks (&lt;em&gt;) and underscores (_) as indicators of emphasis. Text wrapped with one &lt;/em&gt; or &lt;em&gt; will be wrapped with an HTML &lt;em&gt; tag; double *’s or &lt;/em&gt;’s will be wrapped with an HTML &lt;strong&gt; tag. E.g., this input:&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;single asterisks&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;single underscores&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;double asterisks&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;double underscores&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&quot;Tables&quot;&gt;&lt;a href=&quot;#Tables&quot; class=&quot;headerlink&quot; title=&quot;Tables&quot;&gt;&lt;/a&gt;Tables&lt;/h3&gt;&lt;p&gt;An example of table：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;| Tables        | Are           | Cool  |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| ------------- |:-------------:| -----:|&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| col 3 is      | right-aligned | &lt;span class=&quot;variable&quot;&gt;$1600&lt;/span&gt; |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| col 2 is      | centered      |   &lt;span class=&quot;variable&quot;&gt;$12&lt;/span&gt; |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| zebra stripes | are neat      |    &lt;span class=&quot;variable&quot;&gt;$1&lt;/span&gt; |&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;produce&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Tables&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;Are&lt;/th&gt;
&lt;th style=&quot;text-align:right&quot;&gt;Cool&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;col 3 is&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;right-aligned&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;$1600&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;col 2 is&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;centered&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;$12&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;zebra stripes&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;are neat&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;$1&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;I-What-is-Markdown&quot;&gt;&lt;a href=&quot;#I-What-is-Markdown&quot; class=&quot;headerlink&quot; title=&quot;I. What is Markdown&quot;&gt;&lt;/a&gt;I. What is Markdown&lt;/h2&gt;&lt;h3 id=
    
    </summary>
    
    
      <category term="HTML" scheme="http://czd619.github.io/tags/HTML/"/>
    
  </entry>
  
  <entry>
    <title>My new Post</title>
    <link href="http://czd619.github.io/My-new-Post/"/>
    <id>http://czd619.github.io/My-new-Post/</id>
    <published>2013-04-02T07:02:37.000Z</published>
    <updated>2016-04-26T13:07:21.505Z</updated>
    
    <content type="html">&lt;h2 id=&quot;First-Post&quot;&gt;&lt;a href=&quot;#First-Post&quot; class=&quot;headerlink&quot; title=&quot;First Post&quot;&gt;&lt;/a&gt;First Post&lt;/h2&gt;&lt;h3 id=&quot;Use-my-pics-to-test-Hexo&quot;&gt;&lt;a href=&quot;#Use-my-pics-to-test-Hexo&quot; class=&quot;headerlink&quot; title=&quot;Use my pics to test Hexo~~&quot;&gt;&lt;/a&gt;Use my pics to test Hexo~~&lt;/h3&gt;&lt;p&gt;Ducks in Houhai Park @Beijing ~&lt;br&gt;&lt;img src=&quot;images\backSea.jpg&quot; alt=&quot;Ducks in Houhai Park by Dan.Chen with Jianguo&quot;&gt;&lt;/p&gt;
&lt;div align=&quot;center&quot;&gt;&lt;br&gt;  &lt;img src=&quot;images\backSea.jpg&quot; width=&quot;300&quot; height=&quot;500&quot; alt=&quot;&quot; align=&quot;center/&quot;&gt;&lt;br&gt;  &lt;center&gt;by html&lt;/center&gt;&lt;br&gt;&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Hope it can be seen~&lt;/strong&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;First-Post&quot;&gt;&lt;a href=&quot;#First-Post&quot; class=&quot;headerlink&quot; title=&quot;First Post&quot;&gt;&lt;/a&gt;First Post&lt;/h2&gt;&lt;h3 id=&quot;Use-my-pics-to-test-Hexo&quot;&gt;&lt;a href
    
    </summary>
    
    
      <category term="Travelling" scheme="http://czd619.github.io/tags/Travelling/"/>
    
  </entry>
  
</feed>
